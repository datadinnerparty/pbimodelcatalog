table Hierarchies
	lineageTag: dc173271-df88-4ce2-a0a2-2348b13368c7

	column ID
		dataType: string
		lineageTag: 5e891628-73d6-493b-af9f-7508b03a9106
		summarizeBy: none
		sourceColumn: ID

		annotation SummarizationSetBy = Automatic

	column TableID
		dataType: string
		lineageTag: b19e3b09-6730-4956-a55a-8f6fb7560bf0
		summarizeBy: none
		sourceColumn: TableID

		annotation SummarizationSetBy = Automatic

	column 'Hierarchy Name'
		dataType: string
		lineageTag: 0d9cc110-c8b3-4107-8fa1-1250571b929b
		summarizeBy: none
		sourceColumn: Hierarchy Name

		annotation SummarizationSetBy = Automatic

	column Description
		dataType: string
		lineageTag: a1e7c663-8ac8-4c57-8934-ce3649a27f08
		summarizeBy: none
		sourceColumn: Description

		annotation SummarizationSetBy = Automatic

	column IsHidden
		dataType: string
		lineageTag: 79468d30-15f5-4f5d-9c2e-f4ae76fb14bf
		summarizeBy: none
		sourceColumn: IsHidden

		annotation SummarizationSetBy = Automatic

	column 'Table Name'
		dataType: string
		lineageTag: e64d619d-c4ac-4da9-88c6-9f70046b550c
		summarizeBy: none
		sourceColumn: Table Name

		annotation SummarizationSetBy = Automatic

	column SemanticModel
		dataType: string
		lineageTag: 05630ca8-6d53-4e61-b11d-9712cfff6378
		summarizeBy: none
		sourceColumn: SemanticModel

		annotation SummarizationSetBy = Automatic

	column CompoundKey
		dataType: string
		lineageTag: 26f7ad0f-4051-46e6-ab51-a362cc0ebb4c
		summarizeBy: none
		sourceColumn: CompoundKey

		annotation SummarizationSetBy = Automatic

	partition Hierarchies = m
		mode: import
		source = ```
				//
				//Tables/Views used for Model Documentation
				//Created by 3Cloud, LLC
				//Initial Development: Dan Friedman, Rye Perez, Andy Maser
				//March 2024
				//This query pulls in all the relevant data about Hierarchies found in the model, for auto-documentation
				//Typical implementation should not require very much modification of this query
				
				let
				    Source = #table(type table[SemanticModel=text], { {SemanticModel} }),
				     #"Split Column by Delimiter" = Table.ExpandListColumn(Table.TransformColumns(Source, {{"SemanticModel", Splitter.SplitTextByDelimiter(",", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), "SemanticModel"),
				    #"Changed Type" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"SemanticModel", type text}}),
				    #"Trimmed Text" = Table.TransformColumns(#"Changed Type",{{"SemanticModel", Text.Trim, type text}}),
				    #"Add Tables" = Table.AddColumn(#"Trimmed Text" , "sources" , each 
				    let
				        _t = AnalysisServices.Database( WorkspaceConnection, [SemanticModel], [Query="EVALUATE INFO.HIERARCHIES() "])
				    in 
				        _t
				    ),
				    #"Expanded sources" = Table.ExpandTableColumn(#"Add Tables", "sources", {"[ID]","[Name]","[Description]","[IsHidden]","[TableID]"},
				 {"[ID]","[Name]","[Description]","[IsHidden]","[TableID]" }),
				        #"Remove left brackets [" = fnReplaceValues(#"Expanded sources", "[", ""),
				        #"Remove right brackets ]" = fnReplaceValues(#"Remove left brackets [", "]", ""),
				    #"Added Custom" = Table.AddColumn(#"Remove right brackets ]", "CompoundKey", each [SemanticModel] & Text.From([TableID])),
				
				    #"Merged Queries" = Table.NestedJoin(#"Added Custom", {"CompoundKey"}, Tables, {"CompoundKey"}, "Tables", JoinKind.LeftOuter),
				    #"Expanded Tables" = Table.ExpandTableColumn(#"Merged Queries", "Tables", {"Table Name"}, {"Table Name"}),
				    #"Renamed Columns" = Table.RenameColumns(#"Expanded Tables",{{"Name", "Hierarchy Name"}})
				in
				    #"Renamed Columns"
				```

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

