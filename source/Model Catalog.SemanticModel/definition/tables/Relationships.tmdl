table Relationships
	lineageTag: e218f2d8-6414-4488-b2c5-8cc1eda42038

	column ID
		dataType: string
		lineageTag: 5431575d-1b27-4fd6-8180-45e943047dc8
		summarizeBy: none
		sourceColumn: ID

		annotation SummarizationSetBy = Automatic

	column 'Relationhship Name'
		dataType: string
		lineageTag: ed7766ca-c60f-4d16-982b-e9fbb0580f87
		summarizeBy: none
		sourceColumn: Relationhship Name

		annotation SummarizationSetBy = Automatic

	column IsActive
		dataType: string
		lineageTag: e99fa407-115b-46af-99bd-cee1abf223a5
		summarizeBy: none
		sourceColumn: IsActive

		annotation SummarizationSetBy = Automatic

	column Type
		dataType: string
		lineageTag: 413b0b12-9ff9-431c-b857-e147f66c9abd
		summarizeBy: none
		sourceColumn: Type

		annotation SummarizationSetBy = Automatic

	column FromTableID
		dataType: string
		lineageTag: 48c47b84-f192-41d8-8980-d6d90542c831
		summarizeBy: none
		sourceColumn: FromTableID

		annotation SummarizationSetBy = Automatic

	column FromColumnID
		dataType: string
		lineageTag: ced276d3-9c40-42d1-b31f-7424d02a1639
		summarizeBy: none
		sourceColumn: FromColumnID

		annotation SummarizationSetBy = Automatic

	column FromCardinality
		dataType: string
		lineageTag: df130e19-fe11-49c2-8258-4d4ddc1a6240
		summarizeBy: none
		sourceColumn: FromCardinality

		annotation SummarizationSetBy = Automatic

	column ToTableID
		dataType: string
		lineageTag: e60032b0-1544-4942-b7fb-a93813112559
		summarizeBy: none
		sourceColumn: ToTableID

		annotation SummarizationSetBy = Automatic

	column ToColumnID
		dataType: string
		lineageTag: 39ec4572-bb62-4c08-ad59-bf64f6c983dd
		summarizeBy: none
		sourceColumn: ToColumnID

		annotation SummarizationSetBy = Automatic

	column ToCardinality
		dataType: string
		lineageTag: 9983738f-d6c7-475a-ace5-52d6043fddfe
		summarizeBy: none
		sourceColumn: ToCardinality

		annotation SummarizationSetBy = Automatic

	column ModifiedTime
		dataType: string
		lineageTag: 8f746f5b-0658-4e05-9bd4-a47627e469c4
		summarizeBy: none
		sourceColumn: ModifiedTime

		annotation SummarizationSetBy = Automatic

	column 'From Table Name'
		dataType: string
		lineageTag: 22dc7dbf-7a43-410c-b3a5-ff243701c9a6
		summarizeBy: none
		sourceColumn: From Table Name

		annotation SummarizationSetBy = Automatic

	column 'To Table Name'
		dataType: string
		lineageTag: 047d3058-9afa-4532-a08c-c9d8508cba3e
		summarizeBy: none
		sourceColumn: To Table Name

		annotation SummarizationSetBy = Automatic

	column 'From Column Name'
		dataType: string
		lineageTag: 2f312967-b7b5-43cb-b035-34ee14141b2b
		summarizeBy: none
		sourceColumn: From Column Name

		annotation SummarizationSetBy = Automatic

	column 'To Column Name'
		dataType: string
		lineageTag: 7bc82af8-8663-41fc-9e50-c7575b647f18
		summarizeBy: none
		sourceColumn: To Column Name

		annotation SummarizationSetBy = Automatic

	column 'From Table Type'
		dataType: string
		lineageTag: 87912722-dcee-4ab9-9893-cbd9cc567d7d
		summarizeBy: none
		sourceColumn: From Table Type

		annotation SummarizationSetBy = Automatic

	column 'To Table Type'
		dataType: string
		lineageTag: 5d8d7054-489a-45a6-abd3-a2b17ada4595
		summarizeBy: none
		sourceColumn: To Table Type

		annotation SummarizationSetBy = Automatic

	column SemanticModel
		dataType: string
		lineageTag: 0c8b8152-0912-4cab-aeb7-b19be67cf2ee
		summarizeBy: none
		sourceColumn: SemanticModel

		annotation SummarizationSetBy = Automatic

	column modelID
		dataType: string
		lineageTag: 0c365ef5-a2ff-439c-8c03-7f62c777d44b
		summarizeBy: none
		sourceColumn: modelID

		annotation SummarizationSetBy = Automatic

	column FromCompoundKey
		dataType: string
		lineageTag: 1343572a-53f0-431e-b666-14cb25df62e0
		summarizeBy: none
		sourceColumn: FromCompoundKey

		annotation SummarizationSetBy = Automatic

	column ToCompoundKey
		dataType: string
		lineageTag: b71d96f0-8e66-46ae-99f4-f28376be4140
		summarizeBy: none
		sourceColumn: ToCompoundKey

		annotation SummarizationSetBy = Automatic

	column ToColor
		dataType: string
		lineageTag: e2bb8832-c2ac-42e4-9f0f-7e17b7072236
		summarizeBy: none
		sourceColumn: ToColor

		annotation SummarizationSetBy = Automatic

	column FromColor
		dataType: string
		lineageTag: 2576bd45-f142-45f8-9a7a-baeb75c04268
		summarizeBy: none
		sourceColumn: FromColor

		annotation SummarizationSetBy = Automatic

	partition Relationships = m
		mode: import
		source = ```
				//
				//Tables/Views used for Model Documentation
				//Created by 3Cloud, LLC
				//Initial Development: Dan Friedman, Rye Perez, Andy Maser
				//March 2024
				//This query pulls in all the relevant data about relationships found in the model, for auto-documentation
				//Typical implementation should not require very much modification of this query
				
				let
				    Source = #table(type table[SemanticModel=text], { {SemanticModel} }),
				     #"Split Column by Delimiter" = Table.ExpandListColumn(Table.TransformColumns(Source, {{"SemanticModel", Splitter.SplitTextByDelimiter(",", QuoteStyle.Csv), let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), "SemanticModel"),
				    #"Changed Type" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"SemanticModel", type text}}),
				    #"Trimmed Text" = Table.TransformColumns(#"Changed Type",{{"SemanticModel", Text.Trim, type text}}),
				    #"Add Tables" = Table.AddColumn(#"Trimmed Text" , "sources" , each 
				    let
				        _t = AnalysisServices.Database( WorkspaceConnection, [SemanticModel], [Query="
				    EVALUATE
				VAR __relationships =
				    INFO.RELATIONSHIPS ()
				VAR __fromtables =
				    SELECTCOLUMNS ( INFO.TABLES (), ""FromTableID"", [ID], ""From Table Name"", [Name] )
				VAR __addfromtables =
				    NATURALLEFTOUTERJOIN ( __relationships, __fromtables )
				VAR __totables =
				    SELECTCOLUMNS ( INFO.TABLES (), ""ToTableID"", [ID], ""To Table Name"", [Name] )
				VAR __addtotables =
				    NATURALLEFTOUTERJOIN ( __addfromtables, __totables )
				VAR __fromcolumns =
				    SELECTCOLUMNS (
				        INFO.COLUMNS (),
				        ""FromColumnID"", [ID],
				        ""From Column Name"", [ExplicitName]
				    )
				VAR __addfromcolumns =
				    NATURALLEFTOUTERJOIN ( __addtotables, __fromcolumns )
				VAR __tocolumns =
				    SELECTCOLUMNS (
				        INFO.COLUMNS (),
				        ""ToColumnID"", [ID],
				        ""To Column Name"", [ExplicitName]
				    )
				VAR __addtocolumns =
				    NATURALLEFTOUTERJOIN ( __addfromcolumns, __tocolumns )
				RETURN
				    __addtocolumns"])in 
				        _t
				    ),
				    #"Expanded sources" = Table.ExpandTableColumn(#"Add Tables", "sources", {"[ID]","[modelID]","[Name]","[IsActive]","[Type]","[FromTableID]","[FromColumnID]","[FromCardinality]","[ToTableID]","[ToColumnID]","[ToCardinality]"
				                                                                            ,"[ModifiedTime]","[From Column Name]","[To Column Name]","[From Table Name]","[To Table Name]"},
				 {"[ID]","[modelID]","[Name]","[IsActive]","[Type]","[FromTableID]","[FromColumnID]","[FromCardinality]","[ToTableID]","[ToColumnID]","[ToCardinality]"
				                                                                            ,"[ModifiedTime]","[From Column Name]","[To Column Name]","[From Table Name]","[To Table Name]"}),
				        #"Remove left brackets [" = fnReplaceValues(#"Expanded sources", "[", ""),
				        #"Remove right brackets ]" = fnReplaceValues(#"Remove left brackets [", "]", ""),
				    
				    #"Renamed Columns" = Table.RenameColumns(#"Remove right brackets ]",{{"Name", "Relationhship Name"}}),
				    #"Added Custom" = Table.AddColumn(#"Renamed Columns", "FromCompoundKey", each [SemanticModel] & Text.From([FromTableID])),
				    #"Merged Queries" = Table.NestedJoin(#"Added Custom", {"FromCompoundKey"}, Tables, {"CompoundKey"}, "Tables", JoinKind.LeftOuter),
				    #"Expanded Tables" = Table.ExpandTableColumn(#"Merged Queries", "Tables", {"Table Type"}, { "Table Type"}),
				    #"Renamed From Table Type" = Table.RenameColumns(#"Expanded Tables",{{"Table Type", "From Table Type"}}),
				    #"Added Custom1" = Table.AddColumn(#"Renamed From Table Type", "ToCompoundKey", each [SemanticModel] & Text.From([ToTableID])),
				    #"Merged Queries - To Table" = Table.NestedJoin(#"Added Custom1", {"ToCompoundKey"}, Tables, {"CompoundKey"}, "Tables", JoinKind.LeftOuter),
				    #"Expanded To Table" = Table.ExpandTableColumn(#"Merged Queries - To Table", "Tables", {"Table Type"}, { "Table Type"}),
				    #"Renamed To Table Type" = Table.RenameColumns(#"Expanded To Table",{{"Table Type", "To Table Type"}}),
				    #"Changed Type2" = Table.TransformColumnTypes(#"Renamed To Table Type",{{"ToCardinality", type text}, {"FromCardinality", type text}}),
				    #"Replaced Value" = Table.ReplaceValue(#"Changed Type2","2","Many",Replacer.ReplaceText,{"FromCardinality"}),
				    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value","2","Many",Replacer.ReplaceText,{"ToCardinality"}),
				    #"Added Custom2" = Table.AddColumn(#"Replaced Value1", "ToColor", each if Text.Trim([To Table Type]) = "Fact" then FactColor
				else if Text.Trim([To Table Type]) = "Dimension" then DimensionColor
				else DefaultColor),
				    #"Added Custom3" = Table.AddColumn(#"Added Custom2", "FromColor", each if Text.Trim([From Table Type]) = "Fact" then FactColor
				else if Text.Trim([From Table Type]) = "Dimension" then DimensionColor
				else DefaultColor)
				in
				    #"Added Custom3"
				```

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

